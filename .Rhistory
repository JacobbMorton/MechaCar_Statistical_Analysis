install.packages("tidyverse")
install.packages("jsonlite")
setwd("C:/Users/duckt/Desktop/Class Folder/R Analysis/R Scripts")
setwd("C:/Users/duckt/Desktop/Class Folder/R Analysis/R Scripts")
x <- 3
numlist <- c(0,1,2,3,4,5,6,7,8,9)
demo_table <- read.csv(file='demo.csv', check.names=F, striinAsFactors = F)
demo_table <- read.csv(file='demo.csv', check.names=F, striinAsFactors = F)
demo_table <- read.csv(file='demo.csv', check.names=F, stringAsFactors = F)
demo_table <- read.csv(file='demo.csv',check.names=F,stringsAsFactors = F)
library(jsonlite)
?fromJSON
demo_table2 <- fromJSON(txt = 'demo.json')
View(demo_table2)
View(demo_table2)
x <- c(3, 3, 2, 2, 5, 5, 8, 8, 9)
x[3]
demo_table2[3, "Year"]
demo_table[3, "Year"]
demo_table[3,3]
demo_table$Vehicle_Class
demo_table$Vehicle_Class[2]
filter_table2 <- subset(demo_table2, price > 10000 & drive == "4wd" & "clean" %in% title_status) #filter by price and drivetrain
View(filter_table2)
View(filter_table2)
library(tidyverse)
?mutate()
demo_table <- demo_table %>% mutate(Mileage_per_Year=Total_Miles/(2020-Year),IsActive=TRUE) #add columns to original data frame
View(demo_table)
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep') #create summary table
summarize_demo <- demo_table2 %>% group_by(condition) %>% summarize(Mean_Mileage=mean(odometer), .groups = 'keep') #create summary table
View(demo_table2)
View(summarize_demo)
demo_table3 <- read.csv('demo2.csv',check.names = F,stringsAsFactors = F)
View(demo_table3)
long_table <- gather(demo_table3,key="Metric",value="Score",buying_price:popularity)
View(long_table)
?ggplot
head(mpg)
plt <- ggplot(mpt,aes(x=class))
plt <- ggplot(mpg,aes(x=class))
plt + geom_bar()
mpg_summary <- mpg %>% group_by(manufacturer) %>% summarize(Vehicle_Count=n(), .groups = 'keep') #create summary table
View(mpg_summary)
plt <- ggplot(mpg_summary,aes(x=manufacturer,y=Vehicle_Count)) #import dataset into ggplot2
plt + geom_col() #plot a bar plot
View(plt)
View(plt)
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") #plot bar plot with labels
plt + geom_col() + xlab("Manufacturing Company") + ylab("Number of Vehicles in Dataset") + #plot a boxplot with labels
theme(axis.text.x=element_text(angle=45,hjust=1)) #rotate the x-axis label 45 degrees
mpg_summary <- subset(mpg,manufacturer=="toyota") %>% group_by(cyl) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary,aes(x=cyl,y=Mean_Hwy)) #import dataset into ggplot2
View(mpg_summary)
plt + geom_line()
plt + geom_line() + scale_x_discrete(limits=c(4,6,8)) + scale_y_continuous(breaks = c(15:30)) #add line plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty)) #import dataset into ggplot2
plt + geom_point() + xlab("Engine Size (L)") + ylab("City Fuel-Efficiency (MPG)") #add scatter plot with labels
plt <- ggplot(mpg,aes(x=displ,y=cty,color=class)) #import dataset into ggplot2
plt + geom_point() + labs(x="Engine Size (L)", y="City Fuel-Efficiency (MPG)", color="Vehicle Class") #add scatter plot with labels
plt <- ggplot(mpg,aes(y=hwy)) #import dataset into ggplot2
plt + geom_boxplot()
plt <- ggplot(mpg,aes(x=manufacturer, y=hwy)) #import dataset into ggplot2
plt + geom_boxplot()
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
View(mpg_summary)
plt <- ggplot(mpg_summary, aes(x=class,y=factor(year),fill=Mean_Hwy))
plt + geom_tile() + labs(x="Vehicle Class",y="Vehicle Year",fill="Mean Highway (MPG)") #create heatmap with labels
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy)) #import dataset into ggplot2
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy)) #import dataset into ggplot2
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy)) #import dataset into ggplot2
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy)) #import dataset into ggplot2
plt <- ggplot(mpg_summary, aes(x=model,y=factor(year),fill=Mean_Hwy)) #import dataset into ggplot2
mpg_summary <- mpg %>% group_by(model,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
plt + geom_tile() + labs(x="Model",y="Vehicle Year",fill="Mean Highway (MPG)") + #add heatmap with labels > theme(axis.text.x = element_text(angle=90,hjust=1,vjust=.5)) #rotate x-axis labels 90 degrees
> plt <- ggplot(mpg,aes(x=manufacturer,y=hwy)) #import dataset into ggplot2
> plt + geom_boxplot() + #add boxplot
> theme(axis.text.x=element_text(angle=45,hjust=1)) + #rotate x-axis labels 45 degrees
> geom_point() #overlay scatter plot on top
> plt <- ggplot(mpg,aes(x=manufacturer,y=hwy)) #import dataset into ggplot2
> plt + geom_boxplot() + #add boxplot
> theme(axis.text.x=element_text(angle=45,hjust=1)) + #rotate x-axis labels 45 degrees geom_point() #overlay scatter plot on top
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() + #add boxplot
theme(axis.text.x=element_text(angle=45,hjust=1)) + #rotate x-axis labels 45 degrees geom_point() #overlay scatter plot on top
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy)) #import dataset into ggplot2
plt + geom_boxplot() + #add boxplot
theme(axis.text.x=element_text(angle=45,hjust=1)) + #rotate x-axis labels 45 degrees geom_point() #overlay scatter plot on top
save.image("C:/Users/duckt/Desktop/Class Folder/R Analysis/R Scripts/environment.RData")
load("C:/Users/duckt/Desktop/Class Folder/R Analysis/R Scripts/environment.RData")
plt <- ggplot(mpg,aes(y=hwy)) #import dataset into ggplot2
library(jsonlite)
library(tidyverse)
library(ggplot2)
plt <- ggplot(mpg, aes(y=hwy))
plt + geom_boxplot()
plt <- ggplot(mpg, aes(x=manufacturer, y=hwy))
plt + geom_boxplot()
View(mpg_summary)
plt <- ggplpot(mpg_summary, aes(x=class, y=factor(year),fill=Mean_Hwy))
plt <- ggplot(mpg_summary, aes(x=class, y=factor(year),fill=Mean_Hwy))
plt + geom_tile() + labs(x= "Vehicle Class", y= "Vehicle Year", fill="Mean Highway")
rlang::last_error()
View(mpg_summary)
plt <- ggplot(mpg_summary, aes(x=model, y=factor(year),fill=Mean_Hwy))
plt + geom_tile() + labs(x= "Vehicle Class", y= "Vehicle Year", fill="Mean Highway")
View(plt)
plt <- ggplot(mpg_summary, aes(x=class, y=factor(year),fill=Mean_Hwy))
plt + geom_tile() + labs(x= "Vehicle Class", y= "Vehicle Year", fill="Mean Highway")
mpg_summary <- mpg %>% group_by(class,year) %>% summarize(Mean_Hwy=mean(hwy), .groups = 'keep') #create summary table
plt + geom_tile() + labs(x= "Vehicle Class", y= "Vehicle Year", fill="Mean Highway")
plt <- ggplot(mpg_summary, aes(x=class, y=factor(year),fill=Mean_Hwy))
plt + geom_tile() + labs(x= "Vehicle Class", y= "Vehicle Year", fill="Mean Highway")
plt <- ggplot(mpg,aes(x=manufacturer, y=hwy))
plt + geom_boxplot()
theme(axis.text.x = element_text(angle=45,hjust=1)) + geom_point()
theme(axis.text.x = element_text(angle=45,hjust=1))
theme(axis.text.x = element_text(angle=45,hjust=1)) +
geom_point()
plt <- ggplot(mpg,aes(x=manufacturer, y=hwy))
plt <- ggplot(mpg,aes(x=manufacturer, y=hwy)) +
theme(axis.text.x = element_text(angle=45,hjust=1)) +
geom_point()
plt <- ggplot(mpg,aes(x=manufacturer, y=hwy)) +
plt + geom_boxplot()+
theme(axis.text.x = element_text(angle=45,hjust=1)) +
geom_point()
rlang::last_error()
plr <- ggplot(mpg,aes(x=manufacturer,y=hwy))
plt + geom_boxplot()+
theme(axis.line.x = element_text)
plr <- ggplot(mpg,aes(x=manufacturer,y=hwy))
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
View(plr)
View(plr)
plt <- ggplot(mpg,aes(x=manufacturer,y=hwy))
plt + geom_boxplot() +
theme(axis.text.x=element_text(angle=45,hjust=1)) +
geom_point()
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ), .groups = 'keep')
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine))
plt + geom_point(size=4) + labs(x="Vahicle Class", y="Mean Engine Size")
> mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ),SD_Engine=sd(displ), .groups = 'keep')
mpg_summary <- mpg %>% group_by(class) %>% summarize(Mean_Engine=mean(displ),SD_Engine=sd(displ), .groups = 'keep')
plt <- ggplot(mpg_summary,aes(x=class,y=Mean_Engine))
plt + geom_point(size=4) + labs(x="Vehicle Class",y="Mean Engine Size") +
geom_errorbar(aes(ymin=Mean_Engine-SD_Engine,ymax=Mean_Engine+SD_Engine))
mpg_long <- mpg %>% gather(key="MPG_Type",value="Rating",c(cty,hwy))
head(mpg_long)
plt <- ggplot(mpg_long,aes(x=manufacturer,y=Rating,color=MPG_Type))
plt + geom_boxplot() + theme(axis.text.x=element_text(angle=45,hjust=1))
plt + geom_boxplot() + facet_wrap(vars(MPG_Type)) +
theme(axis.text.x=element_text(angle=45,hjust=1),legend.position = "none") + xlab("Manufacturer")
ggplot(mtcars,aes(x=wt)) + geom_density()
shapiro.test(mtcars$wt)
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F)
plt <- ggplot(population_table,aes(x=log10(Miles_Driven)))
plt + geom_density()
sample_table <- population_table %>% sample_n(50)
View(sample_table)
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven)))
sample_table <- population_table %>% sample_n(50)
sample_table2 <- population_table %>% sample_n(50)
t.test(log10(sample_table$Miles_Driven),log10(sample_table2$Miles_Driven))
mpg_data <- read.csv('mpg_modified.csv')
mpg_1999 <- mpg_data %>% filter(year==1999)
mpg_2008 <- mpg_data %>% filter(year==2008)
t.test(mpg_1999$hwy,mpg_2008$hwy,paired = T)
mtcars_filt <- mtcars[,c("hp","cyl")]
mtcars_filt$cyl <- factor(mtcars_filt$cyl)
aov(hp ~ cyl,data=mtcars_filt)
summary(aov(hp ~ cyl,data=mtcars_filt))
plt <- ggplot(mtcars,aes(x=hp,y=qsec))
plt + geom_point()
cor(mtcars$hp,mtcars$qsec)
used_cars <- read.csv('used_car_data.csv',stringsAsFactors = F)
plt <- ggplot(used_cars,aes(x=Miles_Driven,y=Selling_Price))
plt + geom_point()
cor(used_cars$Miles_Driven,used_cars$Selling_Price)
used_matrix <- as.matrix(used_cars[,c("Selling_Price","Present_Price","Miles_Driven")])
cor(used_matrix)
library(jsonlite)
library(tidyverse)
library(ggplot2)
lm(qsec ~ hp,mtcars)
summary(lm(qsec~hp,mtcars))
model <- lm(qsec ~ hp,mtcars)
yvals <- model$coefficients['hp']*mtcars$hp +
model$coefficients['(Intercept)']
plt <- ggplot(mtcars,aes(x=hp,y=qsec))
plt + geom_point() + geom_line(aes(y=yvals), color = "red")
lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars)
table(mpg$class,mpg$year)
tbl <- table(mpg$class,mpg$year)
chisq.test(tbl)
setwd("~/GitHub/MechaCar_Statistical_Analysis")
library(dplyr)
mechampg <- read.csv(MechaCar_mpg.csv)
mechampg <- read.csv(file='MechaCar_mpg.csv', check.names = F,stringsAsFactors = F)
View(mechampg)
lm(qsec ~ vehicle_length,vehicle_weight,spoiler_angle,ground_clearance,awd,mpg)
lm(mechampg)
summary(lm(mechampg))
summary(lm(mechampg))
library(dplyr)
mechampg <- read.csv(file='MechaCar_mpg.csv', check.names = F,stringsAsFactors = F)
lm(mechampg)
summary(lm(mechampg))
susp_sum <- read.csv(file='Suspension_Coil.csv', check.names = F,stringsAsFactors = F)
View(susp_sum)
Total_Summary <- summarize(susp_sum)
View(Total_Summary)
View(susp_sum)
View(Total_Summary)
Total_Summary <- susp_sum %>% group_by(PSI) %>% summarize(susp_sum)
Total_Summary <- susp_sum %>% group_by(PSI) %>% summarize(susp_sum, .groups = 'keep')
View(Total_Summary)
Total_Summary <- susp_sum %>% group_by(PSI) %>% summarize(PSI, .groups = 'keep')
View(Total_Summary)
Total_Summary <- susp_sum %>% group_by(PSI) %>% summarize(Mean=mean(PSI), .groups = 'keep')
View(Total_Summary)
Total_Summary <- susp_sum %>% summarize(Mean=mean(PSI), .groups = 'keep')
View(Total_Summary)
Total_Summary <- susp_sum %>% summarize(Mean=mean(PSI), .groups = 'keep') %>% summarize(Median=median(PSI), .groups = 'keep') %>% summarize(Variance=var(PSI), .groups = 'keep') %>% summarize(SD=sd(PSI), .groups = 'keep')
Total_Summary <- susp_sum %>% summarize(Mean=mean(PSI), .groups = 'keep') %>% summarize(Median=median(PSI), .groups = 'keep') %>% summarize(Variance=var(PSI), .groups = 'keep') %>% summarize(SD=sd(PSI), .groups = 'keep')
Total_Summary <- susp_sum %>% summarize(Mean=mean(PSI)) %>% summarize(Median=median(PSI)) %>% summarize(Variance=var(PSI)) %>% summarize(SD=sd(PSI))
Total_Summary <- susp_sum %>% summarize(Mean=mean(PSI)) %>% summarize(Median=median(PSI)) %>% summarize(Variance=var(PSI)) %>% summarize(SD=sd(PSI))
View(Total_Summary)
Total_Summary <- susp_sum %>% summarize(Mean=mean(PSI), Median=median(PSI))
Total_Summary <- susp_sum %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
lot_summary <- susp_sum %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI), Median=median(PSI), Variance=var(PSI), SD=sd(PSI))
View(lot_summary)
